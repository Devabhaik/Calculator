{"ast":null,"code":"var _jsxFileName = \"/home/ajjubhai/Desktop/deva/calculator/src/Calculator.js\";\nimport React, { Component, useState } from 'react';\nimport './Calculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Numberinput = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, '00', '000'];\nconst Operator = ['+', '-', '*', '/', '%', '.', '<', '='];\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Result: 0,\n      Firstnum: []\n    };\n\n    this.Compute = x => {\n      this.state.Firstnum.push(x.target.innerText);\n      const Num = '';\n      const NewNum = this.state.Firstnum.map(x => {\n        x.forEach(x => {\n          Num += x.toString();\n          return Num;\n        });\n      });\n      this.setState({\n        Result: NewNum\n      });\n      console.log(NewNum);\n\n      if (x.target.innerText == '<') {\n        this.setState({\n          Result: 0\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.Result,\n          onChange: this.Compute\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_btn\",\n            children: Numberinput.map(x => {\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                id: `input${x}`,\n                onClick: this.Compute,\n                children: x\n              }, `input${x}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"operate_btn\",\n            children: Operator.map(x => {\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                id: `input${x}`,\n                onClick: this.Compute,\n                children: x\n              }, `input${x}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/home/ajjubhai/Desktop/deva/calculator/src/Calculator.js"],"names":["React","Component","useState","Numberinput","Operator","Calculator","constructor","props","state","Result","Firstnum","Compute","x","push","target","innerText","Num","NewNum","map","forEach","toString","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,kBAAP;;AAEA,MAAMC,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,IAA/B,EAAqC,KAArC,CAApB;AACA,MAAMC,QAAQ,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAjB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CADG;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;;AAKA,SAAKC,OAAL,GAAgBC,CAAD,IAAO;AACpB,WAAKJ,KAAL,CAAWE,QAAX,CAAoBG,IAApB,CAAyBD,CAAC,CAACE,MAAF,CAASC,SAAlC;AACA,YAAMC,GAAG,GAAG,EAAZ;AACA,YAAMC,MAAM,GAAG,KAAKT,KAAL,CAAWE,QAAX,CAAoBQ,GAApB,CAAyBN,CAAD,IAAO;AAC5CA,QAAAA,CAAC,CAACO,OAAF,CAAWP,CAAD,IAAO;AACfI,UAAAA,GAAG,IAAIJ,CAAC,CAACQ,QAAF,EAAP;AACA,iBAAOJ,GAAP;AACD,SAHD;AAID,OALc,CAAf;AAOA,WAAKK,QAAL,CAAc;AAAEZ,QAAAA,MAAM,EAAEQ;AAAV,OAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;;AAEA,UAAIL,CAAC,CAACE,MAAF,CAASC,SAAT,IAAsB,GAA1B,EAA+B;AAC7B,aAAKM,QAAL,CAAc;AAAEZ,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF,KAhBD;AAiBD;;AACDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,MAAzB;AAAiC,UAAA,QAAQ,EAAE,KAAKE;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,sBACGR,WAAW,CAACe,GAAZ,CAAiBN,CAAD,IAAO;AACtB,kCACE;AACE,gBAAA,EAAE,EAAG,QAAOA,CAAE,EADhB;AAGE,gBAAA,OAAO,EAAE,KAAKD,OAHhB;AAAA,0BAKGC;AALH,iBAEQ,QAAOA,CAAE,EAFjB;AAAA;AAAA;AAAA;AAAA,sBADF;AASD,aAVA;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBACGR,QAAQ,CAACc,GAAT,CAAcN,CAAD,IAAO;AACnB,kCACE;AACE,gBAAA,EAAE,EAAG,QAAOA,CAAE,EADhB;AAGE,gBAAA,OAAO,EAAE,KAAKD,OAHhB;AAAA,0BAKGC;AALH,iBAEQ,QAAOA,CAAE,EAFjB;AAAA;AAAA;AAAA;AAAA,sBADF;AASD,aAVA;AADH;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmCD;;AA9DgC;;AAiEnC,eAAeP,UAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport './Calculator.css';\n\nconst Numberinput = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, '00', '000'];\nconst Operator = ['+', '-', '*', '/', '%', '.', '<', '='];\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Result: 0,\n      Firstnum: [],\n    };\n\n    this.Compute = (x) => {\n      this.state.Firstnum.push(x.target.innerText);\n      const Num = '';\n      const NewNum = this.state.Firstnum.map((x) => {\n        x.forEach((x) => {\n          Num += x.toString();\n          return Num;\n        });\n      });\n\n      this.setState({ Result: NewNum });\n      console.log(NewNum);\n\n      if (x.target.innerText == '<') {\n        this.setState({ Result: 0 });\n      }\n    };\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"calculator\">\n          <input value={this.state.Result} onChange={this.Compute} />\n          <div className=\"btn\">\n            <div className=\"input_btn\">\n              {Numberinput.map((x) => {\n                return (\n                  <button\n                    id={`input${x}`}\n                    key={`input${x}`}\n                    onClick={this.Compute}\n                  >\n                    {x}\n                  </button>\n                );\n              })}\n            </div>\n            <div className=\"operate_btn\">\n              {Operator.map((x) => {\n                return (\n                  <button\n                    id={`input${x}`}\n                    key={`input${x}`}\n                    onClick={this.Compute}\n                  >\n                    {x}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}